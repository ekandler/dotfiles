#!/usr/bin/python2.7
import os
import sys
sys.path.insert(0, os.getcwd())
sys.path.insert(0, os.getcwd() + "/pyload/")

from module.remote.thriftbackend.ThriftClient import ThriftClient, WrongLogin
import re

if len(sys.argv) != 2:
    print "Usage ./main.py FILEID"
    exit(1)

ID = sys.argv[1]

print "Trying to contact pyload-host..."
try:
    client = ThriftClient(host="127.0.0.1", port=7227, user="User", password="yourpw")
except:
    print "Login to pyload unsucessfull. Make sure the server is running and your credentials are correct."
    exit()
print "Connected to pyload host..."

import urllib
# Get a file-like object for the website 
f = urllib.urlopen("http://www.ultrastar-base.com/index.php?section=download&cat=4&id=" + ID)
# Read from the object, storing the page's contents in 's'.
html = f.read()
f.close()


# title matching
regex = r"<span class=\"title\">(.*?)</span>"
regex_match = re.search(regex, html)
if not regex_match:
    print "Error. No Title found"
    exit(1)
title = regex_match.group(1)
print "Dl package title:\t" + title

# dl-link matching regex
regex = r"Download\s[0-9]*:</b></td>\s*\n*\s*<td(?:.)*?>\s*\n*\s*<a href=\".*anonym.to/\?(.*?)\""
#regex_match = re.findall(regex, html)
dl_links = [] 
dl_link = None
for match in re.finditer(regex,html):
    dl_links.append(match.group(1))


if len(dl_links) == 0:
    print "No download-links found"
    exit(1)
else:
    if len(dl_links) == 1:
        dl_link = dl_links[0]
    else:
        print "The following download links have been found:"
        i = 1
        for link in dl_links:
            print "(%d) %s" % (i, link)
            i+=1
        # chose dl link
        idx = raw_input("--> Please choose a download link [1-" + str(i-1) + "]: ")
        try:
            idx = int(idx)
        except:
            print "Exiting..."
            exit(1)
        if idx < 1 or idx >= i:
            print "Error. Out of range"
            exit(1)
        dl_link = dl_links[idx-1]

print "Using download link: \t" + dl_link
        

# pw matching regex
regex = r"Passwort:</b></td>\s*\n\s*<td.*?>(.*?)</td>"
regex_match = re.search(regex, html)
password = None
if not regex_match:
    print "No archive password found"
else:
    password = regex_match.group(1)
    print "Archive Password:\t"+password


urls = [dl_link]
pid = client.addPackage(title, urls, 1)
if password != None: #set archive password
    data = {"password": password}
    client.setPackageData(pid, data)

client.restartPackage(pid)

print "\nPackage added!\n\nPyload Status:"

print "Pyload Server version:", client.getServerVersion()
print client.statusDownloads()
q = client.getQueue()
for p in q:
  data = client.getPackageData(p.pid)
  print "Package Name: ", data.name

  info = client.getPackageInfo(p.pid)
  print "Package Info: ", info



